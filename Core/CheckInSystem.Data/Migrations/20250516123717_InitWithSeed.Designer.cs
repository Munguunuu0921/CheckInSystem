// <auto-generated />
using System;
using CheckInSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CheckInSystem.Data.Migrations
{
    [DbContext(typeof(CheckInDbContext))]
    [Migration("20250516123717_InitWithSeed")]
    partial class InitWithSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CheckInSystem.Data.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartureTime = new DateTime(2025, 5, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            FlightNumber = "AB123",
                            Status = "CheckingIn"
                        },
                        new
                        {
                            Id = 2,
                            DepartureTime = new DateTime(2025, 5, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            FlightNumber = "CN345",
                            Status = "Scheduled"
                        });
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("PassengerId");

                    b.HasIndex("FlightId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerId = 101,
                            FlightId = 1,
                            FullName = "John Doe",
                            PassportNumber = "Y12345678",
                            Status = 0
                        },
                        new
                        {
                            PassengerId = 102,
                            FlightId = 1,
                            FullName = "Alice Smith",
                            PassportNumber = "X98765432",
                            Status = 0
                        },
                        new
                        {
                            PassengerId = 103,
                            FlightId = 2,
                            FullName = "Buyana Dma",
                            PassportNumber = "BB1234567",
                            Status = 0
                        });
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PassengerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SeatId");

                    b.HasIndex("FlightId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            SeatId = 201,
                            FlightId = 1,
                            IsOccupied = false,
                            SeatNumber = "12A"
                        },
                        new
                        {
                            SeatId = 202,
                            FlightId = 1,
                            IsOccupied = false,
                            SeatNumber = "12B"
                        },
                        new
                        {
                            SeatId = 203,
                            FlightId = 1,
                            IsOccupied = false,
                            SeatNumber = "12C"
                        },
                        new
                        {
                            SeatId = 204,
                            FlightId = 2,
                            IsOccupied = false,
                            SeatNumber = "12A"
                        },
                        new
                        {
                            SeatId = 205,
                            FlightId = 2,
                            IsOccupied = false,
                            SeatNumber = "12B"
                        },
                        new
                        {
                            SeatId = 206,
                            FlightId = 2,
                            IsOccupied = false,
                            SeatNumber = "12C"
                        });
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Passenger", b =>
                {
                    b.HasOne("CheckInSystem.Data.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Seat", b =>
                {
                    b.HasOne("CheckInSystem.Data.Models.Flight", "Flight")
                        .WithMany("Seats")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckInSystem.Data.Models.Passenger", "Passenger")
                        .WithMany("Seats")
                        .HasForeignKey("PassengerId");

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Flight", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("CheckInSystem.Data.Models.Passenger", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
